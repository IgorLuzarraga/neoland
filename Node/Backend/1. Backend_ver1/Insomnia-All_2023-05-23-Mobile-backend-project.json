{"_type":"export","__export_format":4,"__export_date":"2023-05-23T07:14:04.829Z","__export_source":"insomnia.desktop.app:v2023.2.2","resources":[{"_id":"req_2c164b071527490cb46e557a9b1ae425","parentId":"fld_146f0b7662224d12ba827ed0335a0060","modified":1684399105080,"created":1684398986952,"url":"http://localhost:8080/api/v1/character/","name":"GETALL","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684398986952,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_146f0b7662224d12ba827ed0335a0060","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684398925263,"created":1684398925263,"name":"Character","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1684398925263,"_type":"request_group"},{"_id":"wrk_1bfb4cc53c944954b9e026949eea243e","parentId":null,"modified":1684329742601,"created":1684329742601,"name":"New Document","description":"","scope":"design","_type":"workspace"},{"_id":"req_a73bde8f3a4443669af2fb36d6c472b0","parentId":"fld_146f0b7662224d12ba827ed0335a0060","modified":1684420605688,"created":1684399018638,"url":"http://localhost:8080/api/v1/character/646637a1e5cf7583e5caea35","name":"GET BY ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684399018638,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c8d0e0ed016a41dea318d6b9bdd12926","parentId":"fld_146f0b7662224d12ba827ed0335a0060","modified":1684730456102,"created":1684399022527,"url":"http://localhost:8080/api/v1/character/646af1d24f817d3084717b0b","name":"UPDATE IMG","description":"","method":"PATCH","body":{"mimeType":"multipart/form-data","params":[{"id":"pair_27eadef5912f460598097776870cc5e2","name":"image","value":"","description":"","type":"file","fileName":"C:\\Users\\iluza\\Downloads\\social-media.png"},{"id":"pair_1d6ae36269c1476c870ff710fc08bc2b","name":"gender","value":"male","description":""},{"id":"pair_0c5fc4bbe5b3458f997fc17dada9a890","name":"name","value":"Sara Connor UPDATED","description":""}]},"parameters":[],"headers":[{"name":"Content-Type","value":"multipart/form-data"}],"authentication":{},"metaSortKey":-1684399022527,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_07a1a55a0b8a49a3b9da2762d374f7b6","parentId":"fld_146f0b7662224d12ba827ed0335a0060","modified":1684625745793,"created":1684399024088,"url":"http://localhost:8080/api/v1/character/64690919214860c9560b1838","name":"DELETE","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684399024088,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_06362f6a73244200a1ad86b7336c0128","parentId":"fld_146f0b7662224d12ba827ed0335a0060","modified":1684603518504,"created":1684399025462,"url":"http://localhost:8080/api/v1/character/name/John%20Connor%204","name":"GET BY NAME","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684399025462,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_33559c16aa974532bbc6644598b86f7b","parentId":"fld_146f0b7662224d12ba827ed0335a0060","modified":1684605204905,"created":1684399026948,"url":"http://localhost:8080/api/v1/character/","name":"CREATE","description":"","method":"POST","body":{"mimeType":"multipart/form-data","params":[{"id":"pair_91e74f9620d2488f835962c7aaa27c04","name":"image","value":"","description":"","type":"file","fileName":"C:\\Users\\iluza\\Downloads\\video-game.png"},{"id":"pair_651a0617d12341df9a9bab4e3bc2ae22","name":"name","value":"Sara Connor","description":""},{"id":"pair_5531bb9f2ba64d1f805c39158a23dba9","name":"gender","value":"female","description":""},{"id":"pair_52435e4149274c8aaaf5b4cc6adf2fb7","name":"movies","value":"6469059a214860c9560b1827,646908c4214860c9560b1833","description":""}]},"parameters":[],"headers":[{"name":"Content-Type","value":"multipart/form-data"}],"authentication":{},"metaSortKey":-1684399026948,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_097e6ffea47f4b3cbcb00b7f1a826c40","parentId":"fld_b967f4104d4b46398eafc978e57f1210","modified":1684605847791,"created":1684399227000,"url":"http://localhost:8080/api/v1/movies/","name":"CREATE","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"Terminator 4\",\n\t\"year\": 2009,\n\t\"director\": \"McG\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684399227000,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_b967f4104d4b46398eafc978e57f1210","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684399214884,"created":1684399214884,"name":"Movies","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1684399214884,"_type":"request_group"},{"_id":"req_aaedf50b4ca04bd58e8726532ba9f5bf","parentId":"fld_b967f4104d4b46398eafc978e57f1210","modified":1684399506553,"created":1684399492568,"url":"http://localhost:8080/api/v1/movies/","name":"GET ALL","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684399492568,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_95d1e390e2904deb809447c75c833369","parentId":"fld_b967f4104d4b46398eafc978e57f1210","modified":1684599992994,"created":1684399756928,"url":"http://localhost:8080/api/v1/movies/646696c1636b7d9878c883d0","name":"GET BY ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684399756928,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_52478ffcc0d64d16830b01c6647cd858","parentId":"fld_b967f4104d4b46398eafc978e57f1210","modified":1684602033478,"created":1684400053912,"url":"http://localhost:8080/api/v1/movies/name/Terminator%202","name":"GET BY NAME ","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684400053912,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_905036d88d0442b3824304602ea4ffb3","parentId":"fld_b967f4104d4b46398eafc978e57f1210","modified":1684625625710,"created":1684400544251,"url":"http://localhost:8080/api/v1/movies/64690b9b214860c9560b184a","name":"UPDATE","description":"","method":"PATCH","body":{"mimeType":"application/json","text":"{\n\t\"characters\": [\"646905b5214860c9560b182a\", \"64690919214860c9560b1838\"]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684400544251,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_dd145a2787334dc4b1a52d67df7217f4","parentId":"fld_b967f4104d4b46398eafc978e57f1210","modified":1684600019905,"created":1684400892196,"url":"http://localhost:8080/api/v1/movies/646696c1636b7d9878c883d0","name":"DELETE","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684400892196,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_3429669c26d74d418582a99c887e6a21","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684773045020,"created":1684518366545,"url":"http://localhost:8080/api/v1/users/register/","name":"REGISTER","description":"","method":"POST","body":{"mimeType":"multipart/form-data","params":[{"id":"pair_effff93e00a4402a84944a9802444b35","name":"email","value":"neolandback@gmail.com","description":""},{"id":"pair_47ca599eb17045a19765d915910eee9e","name":"name","value":"neoland","description":""},{"id":"pair_fb7229ce967f4038bee711589e76ab72","name":"password","value":"neoland34W&%password","description":""},{"id":"pair_ac6c6c85c3af41c28f73654751c0c4ee","name":"gender","value":"hombre","description":""},{"id":"pair_11976c372a864a0c8ab754448a8c56e6","name":"rol","value":"admin","description":""},{"id":"pair_000344dbcf8544aa88a80681ca9826c7","name":"image","value":"","description":"","type":"file","fileName":"C:\\Users\\iluza\\Downloads\\whack-a-mole.jpg"},{"id":"pair_aacbfc628bc44a639917f69ce4f44fb7","name":"movies","value":"6469059a214860c9560b1827","description":""}]},"parameters":[],"headers":[{"name":"Content-Type","value":"multipart/form-data"}],"authentication":{},"metaSortKey":-1684518366545,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_3bf12c8cd1f54011a9791e3da965d117","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684609170526,"created":1684517044149,"name":"Users","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1684517044149,"_type":"request_group"},{"_id":"req_3df9c26d11254a658f43646e8f00ede7","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684623701861,"created":1684520166740,"url":"http://localhost:8080/api/v1/users/login/","name":"LOGIN","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"email\": \"iluzarraga@gmail.com\",\n\t\"password\": \"igor34W&%password\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684520166740,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_80edfae12db84e929f6109bee6573846","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684562209328,"created":1684524582806,"url":"http://localhost:8080/api/v1/users/forgotpassword/","name":"CHANGE FORGOTTEN PASSWORD","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"email\": \"iluzarraga@gmail.com\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684519266642.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_fe9ba17348c84f0db3cb4c896db8aa3c","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684599267790,"created":1684525264949,"url":"http://localhost:8080/api/v1/users/changepassword/","name":"CHANGE PASSWORD","description":"","method":"PATCH","body":{"mimeType":"application/json","text":"{\n\t\"password\": \"igor34W&%password\",\n\t\"newPassword\": \"igor34W&%Newpassword\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NjhmMTcxYjc3NzdmNmQyYzVlOTYzNyIsImVtYWlsIjoidGVzdDVAZ21haWwuY29tIiwiaWF0IjoxNjg0NTk5MjQ2LCJleHAiOjE2ODQ2ODU2NDZ9.aa5AxBA5tBffQVhelovFyZQYSQrbY2iXu1zA5J5nFK4","disabled":false},"metaSortKey":-1684519716691.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_630ea3d5fa244bfb862194d4483fdf76","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684623853316,"created":1684530079596,"url":"http://localhost:8080/api/v1/users/update/update/","name":"UPDATE","description":"","method":"PATCH","body":{"mimeType":"multipart/form-data","params":[{"id":"pair_45d7e90e0dfe4a4a969ec31b85cff2f8","name":"name","value":"igorNew","description":""},{"id":"pair_187b93c48ec2424abd181fd1e87f48e7","name":"image","value":"","description":"","type":"file","fileName":"C:\\Users\\iluza\\Downloads\\idea.png"},{"id":"pair_b60da42017c540748d2109ebfe4f45ff","name":"gender","value":"mujer","description":""},{"id":"pair_19e63958211e4a56bfc4641b522b0ede","name":"movies","value":"6469059a214860c9560b1827,646908c4214860c9560b1833","description":""}]},"parameters":[],"headers":[{"name":"Content-Type","value":"multipart/form-data"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0Njk1MGRjNTY3ZTdjNjEwYjMxZTkxYiIsImVtYWlsIjoiaWx1emFycmFnYUBnbWFpbC5jb20iLCJpYXQiOjE2ODQ2MjM3MjUsImV4cCI6MTY4NDcxMDEyNX0.8n6eKad6EGkTz1QMdArPTJKOZ4IoAJb_eULpgeli4mI"},"metaSortKey":-1684530079596,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e019fc57207149ecac18eb57686950e0","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684599308469,"created":1684530564354,"url":"http://localhost:8080/api/v1/users/","name":"DELETE","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NjhmMTcxYjc3NzdmNmQyYzVlOTYzNyIsImVtYWlsIjoidGVzdDVAZ21haWwuY29tIiwiaWF0IjoxNjg0NTk5MjQ2LCJleHAiOjE2ODQ2ODU2NDZ9.aa5AxBA5tBffQVhelovFyZQYSQrbY2iXu1zA5J5nFK4"},"metaSortKey":-1684525123168,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_23417c793442437bbadbfcdaaf42a6b6","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684609213743,"created":1684609141580,"url":"http://localhost:8080/api/v1/users/","name":"GET ALL","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684609141580,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_3f958de9f3e74648bce723d21da0e506","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684609733038,"created":1684609695974,"url":"http://localhost:8080/api/v1/users/6468a3ff233603f3948871a8","name":"GET BY ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684609695974,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_95e958d88e3340c09c51a8e318489f3b","parentId":"fld_3bf12c8cd1f54011a9791e3da965d117","modified":1684623529854,"created":1684622980650,"url":"","name":"REGISTER JSON","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"email\": \"iluzarraga@gmail.com\",\n\t\"name\": \"igor\",\n\t\"password\": \"igor34W&%password\",\n\t\"gender\": \"hombre\",\n\t\"rol\": \"user\",\n\t\"image\": \"https://pic.onlinewebfonts.com/svg/img_181369.png\",\n\t\"movies\": [\"6469059a214860c9560b1827\",\"646908c4214860c9560b1833\"]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684622980650,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2686ccae37f24b56a827bcba1d367235","parentId":"fld_13eecbfa6707438b87e1dbced82cca3b","modified":1684814671592,"created":1684773998150,"url":"http://localhost:8080/api/v1/mobilesDev/","name":"CREATE BRAND (MARCA)","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"brand\": \"Samsung\",\n\t\"OS\": \"IOS\",\n\t\"versionOS\": \"3.0\",\n\t\"language\": \"castellano\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684773998150,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_13eecbfa6707438b87e1dbced82cca3b","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684773990763,"created":1684773990763,"name":"MobileDevs","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1684773990763,"_type":"request_group"},{"_id":"req_23f05207cea046639e74a2e5eb848c5f","parentId":"fld_13eecbfa6707438b87e1dbced82cca3b","modified":1684793918806,"created":1684793751049,"url":"http://localhost:8080/api/v1/mobilesDev/","name":"GET ALL","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684793751049,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_cc681e2385874771ac5188b87204c2da","parentId":"fld_13eecbfa6707438b87e1dbced82cca3b","modified":1684817586398,"created":1684816913128,"url":"http://localhost:8080/api/v1/mobilesDev/646c469483a51d8dc73e4482","name":"DELETE","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684816913128,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_97b1f8c2b31046c282c19aca3e7751e7","parentId":"fld_0ce0a34b5f94413dbf3399039117e53e","modified":1684815547508,"created":1684780041060,"url":"http://localhost:8080/api/v1/app/","name":"CREATE APP","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"appName\": \"Test1\",\n    \"category\": \"Social\",\n    \"languages\": \"english\",\n    \"appSize\": 320,\n    \"mobileDevs\": \"646c38eee0c724a2f39f75d1,646c3b53899abc666f5f2fcf\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684780041060,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_0ce0a34b5f94413dbf3399039117e53e","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684780034206,"created":1684780034206,"name":"Apps","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1684780034206,"_type":"request_group"},{"_id":"req_a1cfc809c4c541029a42011ebb10afc5","parentId":"fld_0ce0a34b5f94413dbf3399039117e53e","modified":1684815424752,"created":1684790425472,"url":"http://localhost:8080/api/v1/app/646c3bb9899abc666f5f2fd6","name":"DELETE APP","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684790425472,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_1d01603008f44666ba9b0079a4b75573","parentId":"fld_0ce0a34b5f94413dbf3399039117e53e","modified":1684792761576,"created":1684792610435,"url":"http://localhost:8080/api/v1/app/","name":"GET ALL","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1684792610435,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_971bd9b75d7b939ce2b847c4b5b7803bda32f919","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684329742608,"created":1684329742608,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1684329742609,"_type":"environment"},{"_id":"jar_971bd9b75d7b939ce2b847c4b5b7803bda32f919","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684329742611,"created":1684329742611,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_85db5950930f4d8b934b5818be600ca6","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684418245387,"created":1684330485988,"fileName":"Mongoose_populate_objectId","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string","contentType":"yaml","_type":"api_spec"},{"_id":"uts_38b0eca8ea194cbb8150f6ae53b87d67","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684329742618,"created":1684329742618,"name":"Example Test Suite","_type":"unit_test_suite"},{"_id":"uts_9e290395f8a54e13a0a1511b675908e1","parentId":"wrk_1bfb4cc53c944954b9e026949eea243e","modified":1684329742618,"created":1684329742618,"name":"Example Test Suite","_type":"unit_test_suite"}]}